$display-frame-inner-blur: 0.5px !default;
$display-frame-inner-width: 2.5px !default;
$display-frame-inner-color: rgb(255, 250, 246) !default;
$display-frame-inner: 0
  0
  $display-frame-inner-blur
  $display-frame-inner-width
  $display-frame-inner-color !default;

$display-frame-width: 25px !default;
$display-frame-color: rgb(53, 34, 19) !default;
$display-frame: 0 0 0px $display-frame-width $display-frame-color !default;

$display-frame-shadow-offset: 8px 5px;
$display-frame-shadow-blur: 5px;
$display-frame-shadow-width: $display-frame-width;
$display-frame-shadow-color: rgb(0 0 0 / 0.25) !default;
$display-frame-shadow: $display-frame-shadow-offset
  $display-frame-shadow-blur
  $display-frame-shadow-width
  $display-frame-shadow-color !default;

$display-frame-margin: calc(
  $display-frame-width + max($display-frame-shadow-offset...)
) !default;
$display-frame-sizes: (large: 500px, medium: 400px, _: 300px);
$display-frame-hover-scale-factor: 1.035;
$display-frame-hover-transition-length: 0.5s;

$display-frame-popup-spinner-size: 8rem;
$display-frame-popup-spinner-margin: 3rem;

figure.display {
  @apply flex items-center;

  figcaption {
    @apply text-justify m-6 font-normal;

    :nth-child(-n+2) {
      @apply text-center lg:text-left;
    }
  }
  &.rtl {
    @apply lg:flex-row-reverse;

    figcaption :nth-child(-n+2) {
      @apply lg:text-right;
    }
  }

  &.has-frame {
    @each $size in $display-frame-sizes {
      $name: nth($size, 1);
      $px: nth($size, 2);

      @if $name == "_" {
        img {
          max-width: $px;
        }
      } @else {
        &[data-size="#{$name}"] img {
          max-width: $px;
        }
      }
    }
    img {
      width: 80vw;
      margin: $display-frame-margin;
      box-shadow: $display-frame-inner, $display-frame, $display-frame-shadow;
    }
  }

  img {
    transition: transform $display-frame-hover-transition-length;
  }

  label:hover, label:focus, label:focus-visible {
    img {
      transform: scale($display-frame-hover-scale-factor);
    }
  }

  & + * .modal .modal-content {
    @apply flex justify-center flex-col lg:flex-row;
    width: unset;
    min-width: 70vw;
    max-height: calc(100vh - 80px);

    &::before {
      //@include loader;
      position: absolute;
      top: calc(
        50% - $display-frame-popup-spinner-size
          + 0.5 * $display-frame-popup-spinner-margin
      );
      left: calc(
        50% - $display-frame-popup-spinner-size
          + 0.5 * $display-frame-popup-spinner-margin
      );
      z-index: 35;
      height: $display-frame-popup-spinner-size;
      width: $display-frame-popup-spinner-size;
      margin: $display-frame-popup-spinner-margin;
    }

    .image {
      z-index: 40;
    }
  }
}
